services:
  database:
    image: postgres:17.4-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-init-user-db.sql:/docker-entrypoint-initdb.d/init-users.sql:Z
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.2
    links:
      - database
    depends_on:
      database:
        condition: service_healthy
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: keycloak
      KC_BOOTSTRAP_ADMIN_PASSWORD: root
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://database/keycloak
      KC_DB_SCHEMA: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
    command:
      - start-dev
    ports:
      - "8080:8080"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'exec 3<>/dev/tcp/localhost/9000; echo -e "GET /health/ready HTTP/1.1\nhost: localhost:9000\n" >&3; timeout --preserve-status 1 cat <&3 | grep -m 1 status | grep -m 1 UP; ERROR=$?; exec 3<&-; exec 3>&-; exit $$ERROR'
        ]
      interval: 5s
      timeout: 5s
      retries: 15

  keycloak-optimized:
    build:
      context: .
      dockerfile: Dockerfile
    links:
      - database
    depends_on:
      database:
        condition: service_healthy
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: keycloak
      KC_BOOTSTRAP_ADMIN_PASSWORD: root
      KC_DB_URL: jdbc:postgresql://database/keycloak
      KC_DB_SCHEMA: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: true
    command: [ "start", "--optimized" ]
    ports:
      - "8080:8080"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'exec 3<>/dev/tcp/localhost/9000; echo -e "GET /health/ready HTTP/1.1\nhost: localhost:9000\n" >&3; timeout --preserve-status 1 cat <&3 | grep -m 1 status | grep -m 1 UP; ERROR=$?; exec 3<&-; exec 3>&-; exit $$ERROR'
        ]
      interval: 5s
      timeout: 5s
      retries: 15
